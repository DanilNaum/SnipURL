// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: snipurl.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // HTTP-код статуса
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // Опциональное сообщение
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_snipurl_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_snipurl_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{1}
}

func (x *Error) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type ShortURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ShortURLRequest) Reset() {
	*x = ShortURLRequest{}
	mi := &file_snipurl_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortURLRequest) ProtoMessage() {}

func (x *ShortURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortURLRequest.ProtoReflect.Descriptor instead.
func (*ShortURLRequest) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{2}
}

func (x *ShortURLRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ShortURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*ShortURLResponse_Success
	//	*ShortURLResponse_Error
	Response isShortURLResponse_Response `protobuf_oneof:"response"`
}

func (x *ShortURLResponse) Reset() {
	*x = ShortURLResponse{}
	mi := &file_snipurl_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortURLResponse) ProtoMessage() {}

func (x *ShortURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortURLResponse.ProtoReflect.Descriptor instead.
func (*ShortURLResponse) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{3}
}

func (m *ShortURLResponse) GetResponse() isShortURLResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ShortURLResponse) GetSuccess() *SuccessShortURL {
	if x, ok := x.GetResponse().(*ShortURLResponse_Success); ok {
		return x.Success
	}
	return nil
}

func (x *ShortURLResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*ShortURLResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isShortURLResponse_Response interface {
	isShortURLResponse_Response()
}

type ShortURLResponse_Success struct {
	Success *SuccessShortURL `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type ShortURLResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ShortURLResponse_Success) isShortURLResponse_Response() {}

func (*ShortURLResponse_Error) isShortURLResponse_Response() {}

type SuccessShortURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ShortUrl string  `protobuf:"bytes,2,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
}

func (x *SuccessShortURL) Reset() {
	*x = SuccessShortURL{}
	mi := &file_snipurl_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuccessShortURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessShortURL) ProtoMessage() {}

func (x *SuccessShortURL) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessShortURL.ProtoReflect.Descriptor instead.
func (*SuccessShortURL) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{4}
}

func (x *SuccessShortURL) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SuccessShortURL) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

type ShortURLID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ShortURLID) Reset() {
	*x = ShortURLID{}
	mi := &file_snipurl_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortURLID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortURLID) ProtoMessage() {}

func (x *ShortURLID) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortURLID.ProtoReflect.Descriptor instead.
func (*ShortURLID) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{5}
}

func (x *ShortURLID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type OriginalURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*OriginalURLResponse_Success
	//	*OriginalURLResponse_Error
	Response isOriginalURLResponse_Response `protobuf_oneof:"response"`
}

func (x *OriginalURLResponse) Reset() {
	*x = OriginalURLResponse{}
	mi := &file_snipurl_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OriginalURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginalURLResponse) ProtoMessage() {}

func (x *OriginalURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginalURLResponse.ProtoReflect.Descriptor instead.
func (*OriginalURLResponse) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{6}
}

func (m *OriginalURLResponse) GetResponse() isOriginalURLResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *OriginalURLResponse) GetSuccess() *SuccessOriginalURL {
	if x, ok := x.GetResponse().(*OriginalURLResponse_Success); ok {
		return x.Success
	}
	return nil
}

func (x *OriginalURLResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*OriginalURLResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isOriginalURLResponse_Response interface {
	isOriginalURLResponse_Response()
}

type OriginalURLResponse_Success struct {
	Success *SuccessOriginalURL `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type OriginalURLResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*OriginalURLResponse_Success) isOriginalURLResponse_Response() {}

func (*OriginalURLResponse_Error) isOriginalURLResponse_Response() {}

type SuccessOriginalURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	OriginalUrl string  `protobuf:"bytes,2,opt,name=original_url,json=originalUrl,proto3" json:"original_url,omitempty"` // Для 302 редиректа
}

func (x *SuccessOriginalURL) Reset() {
	*x = SuccessOriginalURL{}
	mi := &file_snipurl_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuccessOriginalURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessOriginalURL) ProtoMessage() {}

func (x *SuccessOriginalURL) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessOriginalURL.ProtoReflect.Descriptor instead.
func (*SuccessOriginalURL) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{7}
}

func (x *SuccessOriginalURL) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SuccessOriginalURL) GetOriginalUrl() string {
	if x != nil {
		return x.OriginalUrl
	}
	return ""
}

type JsonShortURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *JsonShortURLRequest) Reset() {
	*x = JsonShortURLRequest{}
	mi := &file_snipurl_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonShortURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonShortURLRequest) ProtoMessage() {}

func (x *JsonShortURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonShortURLRequest.ProtoReflect.Descriptor instead.
func (*JsonShortURLRequest) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{8}
}

func (x *JsonShortURLRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type JsonShortURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*JsonShortURLResponse_Success
	//	*JsonShortURLResponse_Error
	Response isJsonShortURLResponse_Response `protobuf_oneof:"response"`
}

func (x *JsonShortURLResponse) Reset() {
	*x = JsonShortURLResponse{}
	mi := &file_snipurl_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonShortURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonShortURLResponse) ProtoMessage() {}

func (x *JsonShortURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonShortURLResponse.ProtoReflect.Descriptor instead.
func (*JsonShortURLResponse) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{9}
}

func (m *JsonShortURLResponse) GetResponse() isJsonShortURLResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *JsonShortURLResponse) GetSuccess() *SuccessJsonShortURL {
	if x, ok := x.GetResponse().(*JsonShortURLResponse_Success); ok {
		return x.Success
	}
	return nil
}

func (x *JsonShortURLResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*JsonShortURLResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isJsonShortURLResponse_Response interface {
	isJsonShortURLResponse_Response()
}

type JsonShortURLResponse_Success struct {
	Success *SuccessJsonShortURL `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type JsonShortURLResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*JsonShortURLResponse_Success) isJsonShortURLResponse_Response() {}

func (*JsonShortURLResponse_Error) isJsonShortURLResponse_Response() {}

type SuccessJsonShortURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ShortUrl string  `protobuf:"bytes,2,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
}

func (x *SuccessJsonShortURL) Reset() {
	*x = SuccessJsonShortURL{}
	mi := &file_snipurl_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuccessJsonShortURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessJsonShortURL) ProtoMessage() {}

func (x *SuccessJsonShortURL) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessJsonShortURL.ProtoReflect.Descriptor instead.
func (*SuccessJsonShortURL) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{10}
}

func (x *SuccessJsonShortURL) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SuccessJsonShortURL) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

type BatchURLItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	OriginalUrl   string `protobuf:"bytes,2,opt,name=original_url,json=originalUrl,proto3" json:"original_url,omitempty"`
}

func (x *BatchURLItem) Reset() {
	*x = BatchURLItem{}
	mi := &file_snipurl_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchURLItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchURLItem) ProtoMessage() {}

func (x *BatchURLItem) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchURLItem.ProtoReflect.Descriptor instead.
func (*BatchURLItem) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{11}
}

func (x *BatchURLItem) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BatchURLItem) GetOriginalUrl() string {
	if x != nil {
		return x.OriginalUrl
	}
	return ""
}

type BatchCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*BatchURLItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BatchCreateRequest) Reset() {
	*x = BatchCreateRequest{}
	mi := &file_snipurl_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateRequest) ProtoMessage() {}

func (x *BatchCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateRequest) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{12}
}

func (x *BatchCreateRequest) GetItems() []*BatchURLItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type BatchCreateResponseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	ShortUrl      string `protobuf:"bytes,2,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
}

func (x *BatchCreateResponseItem) Reset() {
	*x = BatchCreateResponseItem{}
	mi := &file_snipurl_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateResponseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateResponseItem) ProtoMessage() {}

func (x *BatchCreateResponseItem) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateResponseItem.ProtoReflect.Descriptor instead.
func (*BatchCreateResponseItem) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{13}
}

func (x *BatchCreateResponseItem) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BatchCreateResponseItem) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

type BatchCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*BatchCreateResponse_Success
	//	*BatchCreateResponse_Error
	Response isBatchCreateResponse_Response `protobuf_oneof:"response"`
}

func (x *BatchCreateResponse) Reset() {
	*x = BatchCreateResponse{}
	mi := &file_snipurl_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateResponse) ProtoMessage() {}

func (x *BatchCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateResponse) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{14}
}

func (m *BatchCreateResponse) GetResponse() isBatchCreateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *BatchCreateResponse) GetSuccess() *SuccessBatchCreate {
	if x, ok := x.GetResponse().(*BatchCreateResponse_Success); ok {
		return x.Success
	}
	return nil
}

func (x *BatchCreateResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*BatchCreateResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isBatchCreateResponse_Response interface {
	isBatchCreateResponse_Response()
}

type BatchCreateResponse_Success struct {
	Success *SuccessBatchCreate `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type BatchCreateResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*BatchCreateResponse_Success) isBatchCreateResponse_Response() {}

func (*BatchCreateResponse_Error) isBatchCreateResponse_Response() {}

type SuccessBatchCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status                    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Items  []*BatchCreateResponseItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SuccessBatchCreate) Reset() {
	*x = SuccessBatchCreate{}
	mi := &file_snipurl_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuccessBatchCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessBatchCreate) ProtoMessage() {}

func (x *SuccessBatchCreate) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessBatchCreate.ProtoReflect.Descriptor instead.
func (*SuccessBatchCreate) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{15}
}

func (x *SuccessBatchCreate) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SuccessBatchCreate) GetItems() []*BatchCreateResponseItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type UserURLItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortUrl    string `protobuf:"bytes,1,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
	OriginalUrl string `protobuf:"bytes,2,opt,name=original_url,json=originalUrl,proto3" json:"original_url,omitempty"`
}

func (x *UserURLItem) Reset() {
	*x = UserURLItem{}
	mi := &file_snipurl_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserURLItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserURLItem) ProtoMessage() {}

func (x *UserURLItem) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserURLItem.ProtoReflect.Descriptor instead.
func (*UserURLItem) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{16}
}

func (x *UserURLItem) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

func (x *UserURLItem) GetOriginalUrl() string {
	if x != nil {
		return x.OriginalUrl
	}
	return ""
}

type UserURLsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*UserURLsResponse_Success
	//	*UserURLsResponse_Error
	Response isUserURLsResponse_Response `protobuf_oneof:"response"`
}

func (x *UserURLsResponse) Reset() {
	*x = UserURLsResponse{}
	mi := &file_snipurl_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserURLsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserURLsResponse) ProtoMessage() {}

func (x *UserURLsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserURLsResponse.ProtoReflect.Descriptor instead.
func (*UserURLsResponse) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{17}
}

func (m *UserURLsResponse) GetResponse() isUserURLsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UserURLsResponse) GetSuccess() *SuccessUserURLs {
	if x, ok := x.GetResponse().(*UserURLsResponse_Success); ok {
		return x.Success
	}
	return nil
}

func (x *UserURLsResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*UserURLsResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isUserURLsResponse_Response interface {
	isUserURLsResponse_Response()
}

type UserURLsResponse_Success struct {
	Success *SuccessUserURLs `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type UserURLsResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*UserURLsResponse_Success) isUserURLsResponse_Response() {}

func (*UserURLsResponse_Error) isUserURLsResponse_Response() {}

type SuccessUserURLs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Items  []*UserURLItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SuccessUserURLs) Reset() {
	*x = SuccessUserURLs{}
	mi := &file_snipurl_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuccessUserURLs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessUserURLs) ProtoMessage() {}

func (x *SuccessUserURLs) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessUserURLs.ProtoReflect.Descriptor instead.
func (*SuccessUserURLs) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{18}
}

func (x *SuccessUserURLs) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SuccessUserURLs) GetItems() []*UserURLItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type DeleteUserURLsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UrlIds []string `protobuf:"bytes,1,rep,name=url_ids,json=urlIds,proto3" json:"url_ids,omitempty"`
}

func (x *DeleteUserURLsRequest) Reset() {
	*x = DeleteUserURLsRequest{}
	mi := &file_snipurl_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserURLsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserURLsRequest) ProtoMessage() {}

func (x *DeleteUserURLsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserURLsRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserURLsRequest) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteUserURLsRequest) GetUrlIds() []string {
	if x != nil {
		return x.UrlIds
	}
	return nil
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_snipurl_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_snipurl_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{21}
}

func (x *PingResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type StatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*StatsResponse_Success
	//	*StatsResponse_Error
	Response isStatsResponse_Response `protobuf_oneof:"response"`
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	mi := &file_snipurl_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{22}
}

func (m *StatsResponse) GetResponse() isStatsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *StatsResponse) GetSuccess() *SuccessStats {
	if x, ok := x.GetResponse().(*StatsResponse_Success); ok {
		return x.Success
	}
	return nil
}

func (x *StatsResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*StatsResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isStatsResponse_Response interface {
	isStatsResponse_Response()
}

type StatsResponse_Success struct {
	Success *SuccessStats `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type StatsResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*StatsResponse_Success) isStatsResponse_Response() {}

func (*StatsResponse_Error) isStatsResponse_Response() {}

type SuccessStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   *StatsData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SuccessStats) Reset() {
	*x = SuccessStats{}
	mi := &file_snipurl_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuccessStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessStats) ProtoMessage() {}

func (x *SuccessStats) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessStats.ProtoReflect.Descriptor instead.
func (*SuccessStats) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{23}
}

func (x *SuccessStats) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SuccessStats) GetData() *StatsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type StatsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Urls  int32 `protobuf:"varint,1,opt,name=urls,proto3" json:"urls,omitempty"`
	Users int32 `protobuf:"varint,2,opt,name=users,proto3" json:"users,omitempty"`
}

func (x *StatsData) Reset() {
	*x = StatsData{}
	mi := &file_snipurl_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsData) ProtoMessage() {}

func (x *StatsData) ProtoReflect() protoreflect.Message {
	mi := &file_snipurl_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsData.ProtoReflect.Descriptor instead.
func (*StatsData) Descriptor() ([]byte, []int) {
	return file_snipurl_proto_rawDescGZIP(), []int{24}
}

func (x *StatsData) GetUrls() int32 {
	if x != nil {
		return x.Urls
	}
	return 0
}

func (x *StatsData) GetUsers() int32 {
	if x != nil {
		return x.Users
	}
	return 0
}

var File_snipurl_proto protoreflect.FileDescriptor

var file_snipurl_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x30, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x23, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0x7c, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6e, 0x69, 0x70,
	0x75, 0x72, 0x6c, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x55, 0x52, 0x4c, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x57, 0x0a, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x1c, 0x0a, 0x0a, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x48,
	0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6e, 0x69, 0x70,
	0x75, 0x72, 0x6c, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60,
	0x0a, 0x12, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x55, 0x52, 0x4c, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c,
	0x22, 0x27, 0x0a, 0x13, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x4a, 0x73,
	0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x52,
	0x4c, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6e,
	0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x5b, 0x0a, 0x13, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72,
	0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x58, 0x0a,
	0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x52, 0x4c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x22, 0x41, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x52, 0x4c, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x5d, 0x0a, 0x17, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6e, 0x69, 0x70,
	0x75, 0x72, 0x6c, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x75,
	0x0a, 0x12, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73,
	0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4d, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72,
	0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x55, 0x72, 0x6c, 0x22, 0x7c, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6e, 0x69, 0x70,
	0x75, 0x72, 0x6c, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x55,
	0x52, 0x4c, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x66, 0x0a, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x55, 0x52, 0x4c, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x30, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x72, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x75, 0x72, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x39, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x37, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72,
	0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x76, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f, 0x0a, 0x0c, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75,
	0x72, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x09, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x32, 0xc2, 0x04, 0x0a, 0x0e, 0x53, 0x6e, 0x69, 0x70, 0x55, 0x52, 0x4c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x18, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55,
	0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x12, 0x13, 0x2e, 0x73,
	0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x49,
	0x44, 0x1a, 0x1c, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x52,
	0x4c, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e,
	0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x4a, 0x73,
	0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x6e, 0x69,
	0x70, 0x75, 0x72, 0x6c, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72,
	0x6c, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x55, 0x52, 0x4c, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x73,
	0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x6e, 0x69, 0x70,
	0x75, 0x72, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52,
	0x4c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x6e, 0x69, 0x70,
	0x75, 0x72, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x15, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e,
	0x73, 0x6e, 0x69, 0x70, 0x75, 0x72, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snipurl_proto_rawDescOnce sync.Once
	file_snipurl_proto_rawDescData = file_snipurl_proto_rawDesc
)

func file_snipurl_proto_rawDescGZIP() []byte {
	file_snipurl_proto_rawDescOnce.Do(func() {
		file_snipurl_proto_rawDescData = protoimpl.X.CompressGZIP(file_snipurl_proto_rawDescData)
	})
	return file_snipurl_proto_rawDescData
}

var file_snipurl_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_snipurl_proto_goTypes = []any{
	(*Status)(nil),                  // 0: snipurl.Status
	(*Error)(nil),                   // 1: snipurl.Error
	(*ShortURLRequest)(nil),         // 2: snipurl.ShortURLRequest
	(*ShortURLResponse)(nil),        // 3: snipurl.ShortURLResponse
	(*SuccessShortURL)(nil),         // 4: snipurl.SuccessShortURL
	(*ShortURLID)(nil),              // 5: snipurl.ShortURLID
	(*OriginalURLResponse)(nil),     // 6: snipurl.OriginalURLResponse
	(*SuccessOriginalURL)(nil),      // 7: snipurl.SuccessOriginalURL
	(*JsonShortURLRequest)(nil),     // 8: snipurl.JsonShortURLRequest
	(*JsonShortURLResponse)(nil),    // 9: snipurl.JsonShortURLResponse
	(*SuccessJsonShortURL)(nil),     // 10: snipurl.SuccessJsonShortURL
	(*BatchURLItem)(nil),            // 11: snipurl.BatchURLItem
	(*BatchCreateRequest)(nil),      // 12: snipurl.BatchCreateRequest
	(*BatchCreateResponseItem)(nil), // 13: snipurl.BatchCreateResponseItem
	(*BatchCreateResponse)(nil),     // 14: snipurl.BatchCreateResponse
	(*SuccessBatchCreate)(nil),      // 15: snipurl.SuccessBatchCreate
	(*UserURLItem)(nil),             // 16: snipurl.UserURLItem
	(*UserURLsResponse)(nil),        // 17: snipurl.UserURLsResponse
	(*SuccessUserURLs)(nil),         // 18: snipurl.SuccessUserURLs
	(*DeleteUserURLsRequest)(nil),   // 19: snipurl.DeleteUserURLsRequest
	(*DeleteResponse)(nil),          // 20: snipurl.DeleteResponse
	(*PingResponse)(nil),            // 21: snipurl.PingResponse
	(*StatsResponse)(nil),           // 22: snipurl.StatsResponse
	(*SuccessStats)(nil),            // 23: snipurl.SuccessStats
	(*StatsData)(nil),               // 24: snipurl.StatsData
	(*emptypb.Empty)(nil),           // 25: google.protobuf.Empty
}
var file_snipurl_proto_depIdxs = []int32{
	0,  // 0: snipurl.Error.status:type_name -> snipurl.Status
	4,  // 1: snipurl.ShortURLResponse.success:type_name -> snipurl.SuccessShortURL
	1,  // 2: snipurl.ShortURLResponse.error:type_name -> snipurl.Error
	0,  // 3: snipurl.SuccessShortURL.status:type_name -> snipurl.Status
	7,  // 4: snipurl.OriginalURLResponse.success:type_name -> snipurl.SuccessOriginalURL
	1,  // 5: snipurl.OriginalURLResponse.error:type_name -> snipurl.Error
	0,  // 6: snipurl.SuccessOriginalURL.status:type_name -> snipurl.Status
	10, // 7: snipurl.JsonShortURLResponse.success:type_name -> snipurl.SuccessJsonShortURL
	1,  // 8: snipurl.JsonShortURLResponse.error:type_name -> snipurl.Error
	0,  // 9: snipurl.SuccessJsonShortURL.status:type_name -> snipurl.Status
	11, // 10: snipurl.BatchCreateRequest.items:type_name -> snipurl.BatchURLItem
	15, // 11: snipurl.BatchCreateResponse.success:type_name -> snipurl.SuccessBatchCreate
	1,  // 12: snipurl.BatchCreateResponse.error:type_name -> snipurl.Error
	0,  // 13: snipurl.SuccessBatchCreate.status:type_name -> snipurl.Status
	13, // 14: snipurl.SuccessBatchCreate.items:type_name -> snipurl.BatchCreateResponseItem
	18, // 15: snipurl.UserURLsResponse.success:type_name -> snipurl.SuccessUserURLs
	1,  // 16: snipurl.UserURLsResponse.error:type_name -> snipurl.Error
	0,  // 17: snipurl.SuccessUserURLs.status:type_name -> snipurl.Status
	16, // 18: snipurl.SuccessUserURLs.items:type_name -> snipurl.UserURLItem
	0,  // 19: snipurl.DeleteResponse.status:type_name -> snipurl.Status
	0,  // 20: snipurl.PingResponse.status:type_name -> snipurl.Status
	23, // 21: snipurl.StatsResponse.success:type_name -> snipurl.SuccessStats
	1,  // 22: snipurl.StatsResponse.error:type_name -> snipurl.Error
	0,  // 23: snipurl.SuccessStats.status:type_name -> snipurl.Status
	24, // 24: snipurl.SuccessStats.data:type_name -> snipurl.StatsData
	2,  // 25: snipurl.SnipURLService.CreateShortURL:input_type -> snipurl.ShortURLRequest
	5,  // 26: snipurl.SnipURLService.GetOriginalURL:input_type -> snipurl.ShortURLID
	8,  // 27: snipurl.SnipURLService.CreateShortURLJson:input_type -> snipurl.JsonShortURLRequest
	12, // 28: snipurl.SnipURLService.BatchCreateShortURLs:input_type -> snipurl.BatchCreateRequest
	25, // 29: snipurl.SnipURLService.GetUserURLs:input_type -> google.protobuf.Empty
	19, // 30: snipurl.SnipURLService.DeleteUserURLs:input_type -> snipurl.DeleteUserURLsRequest
	25, // 31: snipurl.SnipURLService.Ping:input_type -> google.protobuf.Empty
	25, // 32: snipurl.SnipURLService.GetStats:input_type -> google.protobuf.Empty
	3,  // 33: snipurl.SnipURLService.CreateShortURL:output_type -> snipurl.ShortURLResponse
	6,  // 34: snipurl.SnipURLService.GetOriginalURL:output_type -> snipurl.OriginalURLResponse
	9,  // 35: snipurl.SnipURLService.CreateShortURLJson:output_type -> snipurl.JsonShortURLResponse
	14, // 36: snipurl.SnipURLService.BatchCreateShortURLs:output_type -> snipurl.BatchCreateResponse
	17, // 37: snipurl.SnipURLService.GetUserURLs:output_type -> snipurl.UserURLsResponse
	20, // 38: snipurl.SnipURLService.DeleteUserURLs:output_type -> snipurl.DeleteResponse
	21, // 39: snipurl.SnipURLService.Ping:output_type -> snipurl.PingResponse
	22, // 40: snipurl.SnipURLService.GetStats:output_type -> snipurl.StatsResponse
	33, // [33:41] is the sub-list for method output_type
	25, // [25:33] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_snipurl_proto_init() }
func file_snipurl_proto_init() {
	if File_snipurl_proto != nil {
		return
	}
	file_snipurl_proto_msgTypes[3].OneofWrappers = []any{
		(*ShortURLResponse_Success)(nil),
		(*ShortURLResponse_Error)(nil),
	}
	file_snipurl_proto_msgTypes[6].OneofWrappers = []any{
		(*OriginalURLResponse_Success)(nil),
		(*OriginalURLResponse_Error)(nil),
	}
	file_snipurl_proto_msgTypes[9].OneofWrappers = []any{
		(*JsonShortURLResponse_Success)(nil),
		(*JsonShortURLResponse_Error)(nil),
	}
	file_snipurl_proto_msgTypes[14].OneofWrappers = []any{
		(*BatchCreateResponse_Success)(nil),
		(*BatchCreateResponse_Error)(nil),
	}
	file_snipurl_proto_msgTypes[17].OneofWrappers = []any{
		(*UserURLsResponse_Success)(nil),
		(*UserURLsResponse_Error)(nil),
	}
	file_snipurl_proto_msgTypes[22].OneofWrappers = []any{
		(*StatsResponse_Success)(nil),
		(*StatsResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snipurl_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_snipurl_proto_goTypes,
		DependencyIndexes: file_snipurl_proto_depIdxs,
		MessageInfos:      file_snipurl_proto_msgTypes,
	}.Build()
	File_snipurl_proto = out.File
	file_snipurl_proto_rawDesc = nil
	file_snipurl_proto_goTypes = nil
	file_snipurl_proto_depIdxs = nil
}
