// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package urlsnipper

import (
	dump "github.com/DanilNaum/SnipURL/pkg/utils/dumper"
	"sync"
)

// Ensure, that dumperMock does implement dumper.
// If this is not the case, regenerate this file with moq.
var _ dumper = &dumperMock{}

// dumperMock is a mock implementation of dumper.
//
//	func TestSomethingThatUsesdumper(t *testing.T) {
//
//		// make and configure a mocked dumper
//		mockeddumper := &dumperMock{
//			AddFunc: func(record *dump.Record) error {
//				panic("mock out the Add method")
//			},
//			ReadAllFunc: func() (chan dump.Record, error) {
//				panic("mock out the ReadAll method")
//			},
//		}
//
//		// use mockeddumper in code that requires dumper
//		// and then make assertions.
//
//	}
type dumperMock struct {
	// AddFunc mocks the Add method.
	AddFunc func(record *dump.URLRecord) error

	// ReadAllFunc mocks the ReadAll method.
	ReadAllFunc func() (chan dump.URLRecord, error)

	// calls tracks calls to the methods.
	calls struct {
		// Add holds details about calls to the Add method.
		Add []struct {
			// Record is the record argument value.
			Record *dump.URLRecord
		}
		// ReadAll holds details about calls to the ReadAll method.
		ReadAll []struct {
		}
	}
	lockAdd     sync.RWMutex
	lockReadAll sync.RWMutex
}

// Add calls AddFunc.
func (mock *dumperMock) Add(record *dump.URLRecord) error {
	if mock.AddFunc == nil {
		panic("dumperMock.AddFunc: method is nil but dumper.Add was just called")
	}
	callInfo := struct {
		Record *dump.URLRecord
	}{
		Record: record,
	}
	mock.lockAdd.Lock()
	mock.calls.Add = append(mock.calls.Add, callInfo)
	mock.lockAdd.Unlock()
	return mock.AddFunc(record)
}

// AddCalls gets all the calls that were made to Add.
// Check the length with:
//
//	len(mockeddumper.AddCalls())
func (mock *dumperMock) AddCalls() []struct {
	Record *dump.URLRecord
} {
	var calls []struct {
		Record *dump.URLRecord
	}
	mock.lockAdd.RLock()
	calls = mock.calls.Add
	mock.lockAdd.RUnlock()
	return calls
}

// ReadAll calls ReadAllFunc.
func (mock *dumperMock) ReadAll() (chan dump.URLRecord, error) {
	if mock.ReadAllFunc == nil {
		panic("dumperMock.ReadAllFunc: method is nil but dumper.ReadAll was just called")
	}
	callInfo := struct {
	}{}
	mock.lockReadAll.Lock()
	mock.calls.ReadAll = append(mock.calls.ReadAll, callInfo)
	mock.lockReadAll.Unlock()
	return mock.ReadAllFunc()
}

// ReadAllCalls gets all the calls that were made to ReadAll.
// Check the length with:
//
//	len(mockeddumper.ReadAllCalls())
func (mock *dumperMock) ReadAllCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockReadAll.RLock()
	calls = mock.calls.ReadAll
	mock.lockReadAll.RUnlock()
	return calls
}
